# Name des Workflows
name: Deploy Database and Backend

# Trigger
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Schritt 1: Code auschecken, damit die Pipeline Zugriff auf deine Ordner hat
      - name: Checkout Code
        uses: actions/checkout@v4

      # =================================================================
      # == DATENBANK-MIGRATION (MIT DOCKER-IMAGE)
      # =================================================================
      - name: Run Flyway Database Migration
        # Verwendet das offizielle Flyway Docker-Image direkt
        uses: docker://redgate/flyway:11
        with:
          # Der Befehl, der im Container ausgeführt wird (in diesem Fall 'migrate')
          args: migrate
        # Übergibt alle Konfigurationen sicher als Umgebungsvariablen
        env:
          FLYWAY_URL: "jdbc:postgresql://${{ secrets.POSTGRES_HOST }}:${{ secrets.POSTGRES_PORT }}/${{ secrets.POSTGRES_DB }}"
          FLYWAY_USER: ${{ secrets.POSTGRES_USER }}
          FLYWAY_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          FLYWAY_LOCATIONS: "filesystem:/github/workspace/db/migrations"
          # Baselining-Konfiguration als Umgebungsvariablen
          FLYWAY_BASELINE_ON_MIGRATE: "true"
          FLYWAY_BASELINE_VERSION: "1"
          FLYWAY_BASELINE_DESCRIPTION: "Initial_Baseline"

      # =================================================================
      # == BACKEND-DEPLOYMENT (unverändert)
      # =================================================================
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies and Build Project
        working-directory: ./brainPop/Backend
        run: |
          npm install
          npm run build

      - name: Deploy built files to server via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "./brainPop/Backend"
          target: "/backend"

      - name: Restart application on server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            sudo systemctl restart brainpop-backend
            sudo systemctl status brainpop-backend